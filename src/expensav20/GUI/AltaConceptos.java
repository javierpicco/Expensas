/*
 * AltaConceptos.java
 *
 * Created on 20 de diciembre de 2007, 19:52
 */

package expensav20.GUI;

import java.text.ParseException;
import java.util.Iterator;
import java.util.List;
import javax.swing.ComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.event.ListDataListener;
import javax.swing.text.MaskFormatter;
import model.Coeficiente;
import model.Concepto;
import model.TipoConcepto;

/**
 *
 * @author  Javier
 */
public class AltaConceptos extends javax.swing.JFrame {
    
    private ConsultaConcepto cc= new ConsultaConcepto();
    private Concepto conceptoUpdated = new Concepto();
    /** Creates new form AltaConceptos */
    public AltaConceptos() {
        initComponents();
        this.jCmb_Coeficiente.setModel(new ComboCoeficientesModel());
        this.jCmb_TpoConcepto.setModel(new ComboTipoConceptosModel());
        this.jCmb_Coeficiente.updateUI();
        this.jCmb_TpoConcepto.updateUI();
        
        try {
            MaskFormatter mascara_prioridad = new MaskFormatter("##");
            mascara_prioridad.setValueContainsLiteralCharacters(false);
            mascara_prioridad.install(this.jFTxt_Prioridad);
            
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
    }
    
    public AltaConceptos(Concepto conc,ConsultaConcepto cc) {
        initComponents();
        this.jCmb_Coeficiente.setModel(new ComboCoeficientesModel());
        this.jCmb_TpoConcepto.setModel(new ComboTipoConceptosModel());
        this.jCmb_Coeficiente.updateUI();
        this.jCmb_TpoConcepto.updateUI();
        
        try {
            MaskFormatter mascara_prioridad = new MaskFormatter("##");
            mascara_prioridad.setValueContainsLiteralCharacters(false);
            mascara_prioridad.install(this.jFTxt_Prioridad);
            
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        this.jTxt_Nombre.setText(conc.getNombre());
        System.out.print(conc.getOrigen());
        if(conc.getOrigen().indexOf("Debe")!=-1){
            this.jCmb_Origen.setSelectedIndex(0);
        }
        else{
            this.jCmb_Origen.setSelectedIndex(1);
        }
        if(conc.getCoeficiente()!=null){
            this.jCmb_Coeficiente.setSelectedIndex(this.buscarCoeficienteCombo(conc.getCoeficiente()));
        }
        this.jFTxt_Prioridad.setText(String.valueOf(conc.getPrioridad()));
        this.jChk_Descripcion.setSelected(conc.isDescripcion());
        this.jChk_IG.setSelected(conc.isIg());
        this.jChk_IVA.setSelected(conc.isIva());
        if(!conc.getCoeficiente().isDistribuible() && conc.getOrigen().indexOf("Haber")==-1){
            this.jCmb_TpoConcepto.setEnabled(true);
            this.jCmb_TpoConcepto.setSelectedIndex(this.buscarTipoConceptoCombo(conc.getTipoConcepto()));
        }
        this.setConceptoUpdated(conc);
        this.setCc(cc);
        this.jCmb_Coeficiente.updateUI();
        this.jCmb_Origen.updateUI();
        if (this.getConceptoUpdated().getNombre().indexOf("Expensas")!=-1){
            this.jCmb_Coeficiente.setEnabled(false);
            this.jTxt_Nombre.setEnabled(false);
            this.jCmb_Origen.setEnabled(false);
        }
       
    }

    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Código Generado  ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTxt_Nombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jCmb_Origen = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jCmb_Coeficiente = new javax.swing.JComboBox();
        jChk_Descripcion = new javax.swing.JCheckBox();
        jChk_IG = new javax.swing.JCheckBox();
        jChk_IVA = new javax.swing.JCheckBox();
        jFTxt_Prioridad = new javax.swing.JFormattedTextField();
        jCmb_TpoConcepto = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jBtn_Aceptar = new javax.swing.JButton();
        jBtn_Cancelar = new javax.swing.JButton();
        jBtn_Salir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Alta de Conceptos");
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Conceptos"));
        jLabel1.setText("Nombre:");

        jLabel2.setText("Prioridad:");

        jLabel3.setText("Origen:");

        jCmb_Origen.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Debe", "Haber" }));
        jCmb_Origen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCmb_OrigenActionPerformed(evt);
            }
        });

        jLabel4.setText("Coeficiente:");

        jCmb_Coeficiente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Coeficiente A", "Coeficiente B", "Coeficiente C" }));
        jCmb_Coeficiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCmb_CoeficienteActionPerformed(evt);
            }
        });
        jCmb_Coeficiente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jCmb_CoeficienteFocusLost(evt);
            }
        });

        jChk_Descripcion.setText("Incluye Descripci\u00f3n");
        jChk_Descripcion.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jChk_Descripcion.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jChk_IG.setText("Aplica Ingresos Brutos");
        jChk_IG.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jChk_IG.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jChk_IG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jChk_IGActionPerformed(evt);
            }
        });
        jChk_IG.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jChk_IGPropertyChange(evt);
            }
        });

        jChk_IVA.setText("Incluye IVA I.G.");
        jChk_IVA.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jChk_IVA.setEnabled(false);
        jChk_IVA.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jCmb_TpoConcepto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Coeficiente A", "Coeficiente B", "Coeficiente C" }));
        jCmb_TpoConcepto.setEnabled(false);

        jLabel5.setText("Tipo Conc.:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jFTxt_Prioridad, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCmb_Origen, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTxt_Nombre)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jChk_Descripcion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jChk_IVA)
                            .addComponent(jChk_IG)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCmb_TpoConcepto, 0, 209, Short.MAX_VALUE)
                            .addComponent(jCmb_Coeficiente, 0, 209, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTxt_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jFTxt_Prioridad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jCmb_Origen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jCmb_Coeficiente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jCmb_TpoConcepto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jChk_Descripcion)
                    .addComponent(jChk_IG, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jChk_IVA)
                .addContainerGap())
        );

        jBtn_Aceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/expensav20/GUI/Icons/tick.png")));
        jBtn_Aceptar.setText("Aceptar");
        jBtn_Aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_AceptarActionPerformed(evt);
            }
        });

        jBtn_Cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/expensav20/GUI/Icons/cross.png")));
        jBtn_Cancelar.setText("Cancelar");
        jBtn_Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_CancelarActionPerformed(evt);
            }
        });

        jBtn_Salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/expensav20/GUI/Icons/door_out.png")));
        jBtn_Salir.setText("Salir");
        jBtn_Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_SalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addComponent(jBtn_Aceptar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtn_Cancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtn_Salir)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtn_Salir)
                    .addComponent(jBtn_Cancelar)
                    .addComponent(jBtn_Aceptar))
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCmb_CoeficienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmb_CoeficienteActionPerformed
        if (this.jCmb_Coeficiente.getSelectedIndex()!=-1){
            Coeficiente coe=(Coeficiente)((ComboCoeficientesModel)this.jCmb_Coeficiente.getModel()).getLst().get(this.jCmb_Coeficiente.getSelectedIndex());
            if (!coe.isDistribuible()){
                this.jCmb_TpoConcepto.setEnabled(true);
            }
            else{
                this.jCmb_TpoConcepto.setEnabled(false);
            }
        }

    }//GEN-LAST:event_jCmb_CoeficienteActionPerformed

    private void jCmb_CoeficienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jCmb_CoeficienteFocusLost
        if (this.jCmb_Coeficiente.getSelectedIndex()!=-1){
            Coeficiente coe=(Coeficiente)((ComboCoeficientesModel)this.jCmb_Coeficiente.getModel()).getLst().get(this.jCmb_Coeficiente.getSelectedIndex());
            if (!coe.isDistribuible()){
                this.jCmb_TpoConcepto.setEnabled(true);
            }
            else{
                this.jCmb_TpoConcepto.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jCmb_CoeficienteFocusLost

    private void jBtn_CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_CancelarActionPerformed
        this.limpiar();
    }//GEN-LAST:event_jBtn_CancelarActionPerformed

    private void jCmb_OrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmb_OrigenActionPerformed
        if ((String)this.jCmb_Origen.getSelectedItem()=="Haber"){
            this.jCmb_Coeficiente.setSelectedIndex(-1);
            this.jCmb_Coeficiente.setEnabled(false);
        }
        else{
            this.jCmb_Coeficiente.setEnabled(true);
        }
    }//GEN-LAST:event_jCmb_OrigenActionPerformed

    private void jBtn_AceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_AceptarActionPerformed
        if (this.validateFields()==false)
            return;
        Concepto con=new Concepto();
        if ((String)this.jCmb_Origen.getSelectedItem()=="Debe")
            con.setCoeficiente((Coeficiente)((ComboCoeficientesModel)this.jCmb_Coeficiente.getModel()).getLst().get(this.jCmb_Coeficiente.getSelectedIndex()));
        con.setNombre(this.jTxt_Nombre.getText());
        con.setIg(this.jChk_IG.isSelected());
        con.setIva(this.jChk_IVA.isSelected());
        con.setDescripcion(this.jChk_Descripcion.isSelected());
        con.setOrigen((String)this.jCmb_Origen.getSelectedItem());
        if (this.jFTxt_Prioridad.getText().trim().length()>0)
            con.setPrioridad(Integer.parseInt(this.jFTxt_Prioridad.getText().trim()));
        TipoConcepto tpoCon=new TipoConcepto();
        if(this.jCmb_TpoConcepto.isEnabled()){
            tpoCon=(TipoConcepto)((ComboTipoConceptosModel)this.jCmb_TpoConcepto.getModel()).getLst().get(this.jCmb_TpoConcepto.getSelectedIndex());
        }
        con.setTipoConcepto(tpoCon);
        if(this.getConceptoUpdated().getCodigo()==0){
            con.guardar();
            if (con.getCodigo()!=0){
                JOptionPane.showMessageDialog(this.getContentPane(),"El concepto fue guardado correctamente");
                this.limpiar();
            }
            else{
                JOptionPane.showMessageDialog(this.getContentPane(),"Ocurrió un error, por favor intente nuevamente");
            }
            this.jTxt_Nombre.requestFocus();
        }
        else{
            con.setCodigo(this.getConceptoUpdated().getCodigo());
            if(con.modificar()!=0){
                JOptionPane.showMessageDialog(this.getContentPane(),"El concepto se modificó correctamente");
                this.getCc().actualizar();
            }
            else{
                JOptionPane.showMessageDialog(this.getContentPane(),"Ocurrió un problema, por favor intente nuevamente");
            }
        }
            
    }//GEN-LAST:event_jBtn_AceptarActionPerformed

    private void jChk_IGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jChk_IGActionPerformed
        if (this.jChk_IG.isSelected()){
            this.jChk_IVA.setEnabled(true);
        }
        else{
            this.jChk_IVA.setSelected(false);
            this.jChk_IVA.setEnabled(false);
        }
    }//GEN-LAST:event_jChk_IGActionPerformed

    private void jChk_IGPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jChk_IGPropertyChange
            
    }//GEN-LAST:event_jChk_IGPropertyChange

    private void jBtn_SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_SalirActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jBtn_SalirActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AltaConceptos().setVisible(true);
            }
        });
    }
    
    // Declaración de varibales -no modificar//GEN-BEGIN:variables
    private javax.swing.JButton jBtn_Aceptar;
    private javax.swing.JButton jBtn_Cancelar;
    private javax.swing.JButton jBtn_Salir;
    private javax.swing.JCheckBox jChk_Descripcion;
    private javax.swing.JCheckBox jChk_IG;
    private javax.swing.JCheckBox jChk_IVA;
    private javax.swing.JComboBox jCmb_Coeficiente;
    private javax.swing.JComboBox jCmb_Origen;
    private javax.swing.JComboBox jCmb_TpoConcepto;
    private javax.swing.JFormattedTextField jFTxt_Prioridad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTxt_Nombre;
    // Fin de declaración de variables//GEN-END:variables
    
    class ComboCoeficientesModel implements ComboBoxModel{
        
        Coeficiente coe=new Coeficiente();
        protected Object selected;
        private List lst;
         
        ComboCoeficientesModel(){
            this.setLst(coe.buscarActivos());
        }
        public void setSelectedItem(Object item) {
               this.selected=item;
        }
	public Object getSelectedItem() {
		return this.selected;
	}

	public String getElementAt(int index) {
                Coeficiente coef=new Coeficiente();
                coef=(Coeficiente)getLst().get(index);
		return coef.getDenominacion();
	}
        
	public int getSize() {
		return getLst().size();
	}        

        public void addListDataListener(ListDataListener l) {
        }

        public void removeListDataListener(ListDataListener l) {
        }

        public List getLst() {
            return lst;
        }

        public void setLst(List lst) {
            this.lst = lst;
        }
        
    }
    
    class ComboTipoConceptosModel implements ComboBoxModel{
        
        TipoConcepto tc=new TipoConcepto();
        protected Object selected;
        private List lst;
         
        ComboTipoConceptosModel(){
            this.setLst(tc.buscarTodos());
        }
        public void setSelectedItem(Object item) {
               this.selected=item;
        }
	public Object getSelectedItem() {
		return this.selected;
	}

	public String getElementAt(int index) {
                TipoConcepto tc=new TipoConcepto();
                tc=(TipoConcepto)getLst().get(index);
		return tc.getDescripcion();
	}
        
	public int getSize() {
		return getLst().size();
	}        

        public void addListDataListener(ListDataListener l) {
        }

        public void removeListDataListener(ListDataListener l) {
        }

        public List getLst() {
            return lst;
        }

        public void setLst(List lst) {
            this.lst = lst;
        }
        
    }
    
    public void limpiar(){
        this.jTxt_Nombre.setText("");
        this.jFTxt_Prioridad.setText("");
        this.jChk_Descripcion.setSelected(false);
        this.jChk_IG.setSelected(false);
        this.jChk_IVA.setSelected(false);
        this.jCmb_TpoConcepto.setSelectedIndex(-1);
        this.jCmb_TpoConcepto.setEnabled(false);
    }
         
     //Método para validar Empty Fields
    private boolean validateFields(){
 
        if (this.jTxt_Nombre.getText().trim().length()==0||this.jTxt_Nombre.getText().trim().length()>30){
          JOptionPane.showMessageDialog(this.getContentPane(),"El nombre no puede estar vacío o contener mas de 30 caracteres");
          this.jTxt_Nombre.requestFocus();
          return false;
        }
        if ((String)this.jCmb_Origen.getSelectedItem()=="Debe"){
            if (this.jCmb_Coeficiente.getSelectedIndex()==-1){
                JOptionPane.showMessageDialog(this.getContentPane(),"Debe seleccionar un coeficiente");
                this.jCmb_Coeficiente.requestFocus();
                return false;
            }
        }
        else{
            this.jCmb_Coeficiente.setSelectedIndex(-1);
        }
        if(this.jCmb_TpoConcepto.isEnabled()){
            if(this.jCmb_TpoConcepto.getSelectedIndex()==-1){
                JOptionPane.showMessageDialog(this.getContentPane(),"Debe seleccionar un tipo de concepto previamente");
                this.jCmb_TpoConcepto.requestFocus();
                return false;
            }
        }
        return true;
    }

    public ConsultaConcepto getCc() {
        return cc;
    }

    public void setCc(ConsultaConcepto cc) {
        this.cc = cc;
    }

    public Concepto getConceptoUpdated() {
        return conceptoUpdated;
    }

    public void setConceptoUpdated(Concepto conceptoUpdated) {
        this.conceptoUpdated = conceptoUpdated;
    }
    public int buscarCoeficienteCombo(Coeficiente coe)
    {
        List lst=((ComboCoeficientesModel)this.jCmb_Coeficiente.getModel()).getLst();
        Iterator it=lst.iterator();
        int index=0;
        while (it.hasNext()){
            Coeficiente coef = (Coeficiente)it.next();
            if (coef.getCodigo()==coe.getCodigo()){
                return index;
            }
            index++;
        }
        return -1;
            
    }
    public int buscarTipoConceptoCombo(TipoConcepto tc)
    {
        List lst=((ComboTipoConceptosModel)this.jCmb_TpoConcepto.getModel()).getLst();
        Iterator it=lst.iterator();
        int index=0;
        while (it.hasNext()){
            TipoConcepto tc2 = (TipoConcepto)it.next();
            if (tc.getCodigo()==tc2.getCodigo()){
                return index;
            }
            index++;
        }
        return -1;
            
    }


}


