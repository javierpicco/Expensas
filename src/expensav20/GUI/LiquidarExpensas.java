/*
 * LiquidarExpensas.java
 *
 * Created on 21 de diciembre de 2007, 21:26
 */

package expensav20.GUI;

import DAO.ConnectionSing;
import informes.InformeLiquidacion;
import java.math.RoundingMode;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Currency;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import javax.swing.ComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.event.ListDataListener;
import javax.swing.event.TableModelListener;
import javax.swing.table.TableModel;
import javax.swing.text.MaskFormatter;
import model.Coeficiente;
import model.Consorcio;




/**
 *
 * @author  Javier
 */
public class LiquidarExpensas extends javax.swing.JFrame {
    
    /** Creates new form LiquidarExpensas */
    public LiquidarExpensas() {
        initComponents();
        this.jCmb_Consorcio.setModel(new ComboConsorciosModel());
        this.jCmb_Consorcio.updateUI();
        this.jBgr_TipoLiquidacion.add(this.JRbtn_Gasto);
        this.jBgr_TipoLiquidacion.add(this.jRbt_Fijo);
        this.jTlb_MontoFijo.setModel(new TableCoeficientesModel());
        this.jTlb_MontoFijo.updateUI();
        try {
            MaskFormatter mascara_periodo = new MaskFormatter("##/####");
            mascara_periodo.install(this.jFtf_Periodo);
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Código Generado  ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jBgr_TipoLiquidacion = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        JRbtn_Gasto = new javax.swing.JRadioButton();
        jRbt_Fijo = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jCmb_Consorcio = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTlb_MontoFijo = new javax.swing.JTable();
        jBtn_PopularTabla = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jFtf_Periodo = new javax.swing.JFormattedTextField();
        jBtn_Salir = new javax.swing.JButton();
        jBtn_Liquidar = new javax.swing.JButton();
        jBtn_Imprimir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Generar Liquidaciones");
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Expensas"));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        JRbtn_Gasto.setSelected(true);
        JRbtn_Gasto.setText("Generar x Gasto");
        JRbtn_Gasto.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        JRbtn_Gasto.setMargin(new java.awt.Insets(0, 0, 0, 0));
        JRbtn_Gasto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JRbtn_GastoActionPerformed(evt);
            }
        });

        jRbt_Fijo.setText("Generar x Monto Fijo");
        jRbt_Fijo.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRbt_Fijo.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jRbt_Fijo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRbt_FijoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JRbtn_Gasto)
                    .addComponent(jRbt_Fijo))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(JRbtn_Gasto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRbt_Fijo)
                .addContainerGap())
        );

        jLabel2.setText("Consorcio:");

        jCmb_Consorcio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Galeria Norte", "Edificio Taormina" }));

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTlb_MontoFijo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Título 1", "Título 2", "Título 3", "Título 4"
            }
        ));
        jTlb_MontoFijo.setEnabled(false);
        jScrollPane1.setViewportView(jTlb_MontoFijo);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jBtn_PopularTabla.setIcon(new javax.swing.ImageIcon(getClass().getResource("/expensav20/GUI/Icons/hourglass_add.png")));
        jBtn_PopularTabla.setEnabled(false);
        jBtn_PopularTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_PopularTablaActionPerformed(evt);
            }
        });

        jLabel3.setText("Periodo:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jCmb_Consorcio, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtn_PopularTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jFtf_Periodo, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jCmb_Consorcio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jFtf_Periodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jBtn_PopularTabla)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jBtn_Salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/expensav20/GUI/Icons/door_out.png")));
        jBtn_Salir.setText("Salir");
        jBtn_Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_SalirActionPerformed(evt);
            }
        });

        jBtn_Liquidar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/expensav20/GUI/Icons/lightning_go.png")));
        jBtn_Liquidar.setText("Liquidar");
        jBtn_Liquidar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_LiquidarActionPerformed(evt);
            }
        });

        jBtn_Imprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/expensav20/GUI/Icons/report_add.png")));
        jBtn_Imprimir.setText("Imprimir");
        jBtn_Imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_ImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(88, Short.MAX_VALUE)
                .addComponent(jBtn_Imprimir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtn_Liquidar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtn_Salir)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtn_Salir)
                    .addComponent(jBtn_Liquidar)
                    .addComponent(jBtn_Imprimir))
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtn_PopularTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_PopularTablaActionPerformed
        if (this.jCmb_Consorcio.getSelectedIndex()==-1){
            JOptionPane.showMessageDialog(this.getContentPane(),"Debe seleccionar un consorcio previamente");
            this.jCmb_Consorcio.requestFocus();
            return;
        }
            
        Consorcio cons=(Consorcio) ((ComboConsorciosModel)this.jCmb_Consorcio.getModel()).getLst().get(this.jCmb_Consorcio.getSelectedIndex());        
        Coeficiente coefic=new Coeficiente();
        List lst= coefic.buscarDistribuiblesActivos();
        ((TableCoeficientesModel)this.jTlb_MontoFijo.getModel()).setLst(lst);
        Iterator itLst=lst.iterator();
        Map parMap=new HashMap();
        while (itLst.hasNext()){
            Coeficiente coef = (Coeficiente)itLst.next();
            parMap.put(coef.getCodigo(),0d);
        }
        ((TableCoeficientesModel)this.jTlb_MontoFijo.getModel()).setMp(parMap);
        this.jTlb_MontoFijo.updateUI();
    }//GEN-LAST:event_jBtn_PopularTablaActionPerformed

    private void JRbtn_GastoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JRbtn_GastoActionPerformed
        if (this.JRbtn_Gasto.isSelected()){
            this.jTlb_MontoFijo.setEnabled(false);
            this.jBtn_PopularTabla.setEnabled(false);
            this.jPanel3.setEnabled(false);
        }
        else{
            this.jTlb_MontoFijo.setEnabled(true);
            this.jBtn_PopularTabla.setEnabled(true);
            this.jPanel3.setEnabled(true);
        }
        ((TableCoeficientesModel)this.jTlb_MontoFijo.getModel()).getLst().clear();
        ((TableCoeficientesModel)this.jTlb_MontoFijo.getModel()).getMp().clear();
        this.jTlb_MontoFijo.updateUI();
    }//GEN-LAST:event_JRbtn_GastoActionPerformed

    private void jRbt_FijoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRbt_FijoActionPerformed
        if (this.jRbt_Fijo.isSelected()){
            this.jTlb_MontoFijo.setEnabled(true);
            this.jBtn_PopularTabla.setEnabled(true);
            this.jPanel3.setEnabled(true);
        }
        else{
            this.jTlb_MontoFijo.setEnabled(false);
            this.jBtn_PopularTabla.setEnabled(false);
            this.jPanel3.setEnabled(false);
        }
        ((TableCoeficientesModel)this.jTlb_MontoFijo.getModel()).getLst().clear();
        ((TableCoeficientesModel)this.jTlb_MontoFijo.getModel()).getMp().clear();
        this.jTlb_MontoFijo.updateUI();
           
    }//GEN-LAST:event_jRbt_FijoActionPerformed

    private void jBtn_ImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_ImprimirActionPerformed
        if (!this.validateForm())
            return;
        Map param=new HashMap();
        Date periodo=null;
        Consorcio cons=new Consorcio();
        cons=(Consorcio) ((ComboConsorciosModel)this.jCmb_Consorcio.getModel()).getLst().get(this.jCmb_Consorcio.getSelectedIndex());
        param.put("consorcio_codigo",new Long(cons.getCodigo()));
        SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
        try {
            periodo=df.parse("01/"+this.jFtf_Periodo.getText());
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        SimpleDateFormat df2 = new SimpleDateFormat("yyyy-MM-dd");
        param.put("periodo_liquidacion",df2.format(periodo));
        InformeLiquidacion infLiq=new InformeLiquidacion();
        infLiq.setParameters(param);
        infLiq.displayReport();
        if (JOptionPane.showInternalConfirmDialog(super.getContentPane(),"Desea eliminar los datos?")==0){
            if (cons.eliminarliquidacion(periodo)){
              JOptionPane.showMessageDialog(super.getContentPane(),"La liquidación fue eliminada definitivamente.");    
           }
           else{
              JOptionPane.showMessageDialog(super.getContentPane(),"Ocurrió un error al intentar eliminar la liquidaciòn.");      
           }
        }

    }//GEN-LAST:event_jBtn_ImprimirActionPerformed
   
    private void jBtn_LiquidarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_LiquidarActionPerformed
        if (!this.validateForm())
            return;
        Consorcio cons=new Consorcio();
        cons=(Consorcio) ((ComboConsorciosModel)this.jCmb_Consorcio.getModel()).getLst().get(this.jCmb_Consorcio.getSelectedIndex());
        Map a=null;
        Date periodo=null;
        if (this.jRbt_Fijo.isSelected()){
            a=((TableCoeficientesModel)this.jTlb_MontoFijo.getModel()).getMp();
        }
        SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
        try {
            periodo=df.parse("01/"+this.jFtf_Periodo.getText());
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        if (cons.existeLiquidacion(cons,periodo)){
            JOptionPane.showMessageDialog(this.getContentPane(),"Ya existe una liquidación para el consorcio en el período ingresado");
            return;
        }
        if (cons.liquidar(periodo,a)){
            JOptionPane.showMessageDialog(this.getContentPane(),"La Liquidación se generó correctamente");
        }
        else{
            JOptionPane.showMessageDialog(this.getContentPane(),"Ocurrió un problema al generar la liquidación");
        }   
    }//GEN-LAST:event_jBtn_LiquidarActionPerformed

    private void jBtn_SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_SalirActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jBtn_SalirActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LiquidarExpensas().setVisible(true);
            }
        });
    }
    
    // Declaración de varibales -no modificar//GEN-BEGIN:variables
    private javax.swing.JRadioButton JRbtn_Gasto;
    private javax.swing.ButtonGroup jBgr_TipoLiquidacion;
    private javax.swing.JButton jBtn_Imprimir;
    private javax.swing.JButton jBtn_Liquidar;
    private javax.swing.JButton jBtn_PopularTabla;
    private javax.swing.JButton jBtn_Salir;
    private javax.swing.JComboBox jCmb_Consorcio;
    private javax.swing.JFormattedTextField jFtf_Periodo;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRbt_Fijo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTlb_MontoFijo;
    // Fin de declaración de variables//GEN-END:variables

    class ComboConsorciosModel implements ComboBoxModel{
        
        Consorcio cons=new Consorcio();
        protected Object selected;
        private List lst;
         
        ComboConsorciosModel(){
            this.setLst(cons.buscarActivos());
        }
        public void setSelectedItem(Object item) {
               this.selected=item;
        }
	public Object getSelectedItem() {
		return this.selected;
	}

	public String getElementAt(int index) {
                Consorcio consor=new Consorcio();
                consor=(Consorcio)getLst().get(index);
		return consor.getDenominacion();
	}
        
	public int getSize() {
		return getLst().size();
	}        

        public void addListDataListener(ListDataListener l) {
        }

        public void removeListDataListener(ListDataListener l) {
        }

        public List getLst() {
            return lst;
        }

        public void setLst(List lst) {
            this.lst = lst;
        }
    }
    
    public boolean validateForm(){
        boolean return_value=true;
        SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
        if (this.jCmb_Consorcio.getSelectedIndex()==-1){
            JOptionPane.showMessageDialog(this.getContentPane(),"Debe seleccionar un consorcio previamente");
            this.jCmb_Consorcio.requestFocus();
            return_value=false;
        }
        try {
            df.parse("01/"+this.jFtf_Periodo.getText());
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this.getContentPane(),"El período ingresado no es correcto.");
            this.jFtf_Periodo.requestFocus();
            return_value=false;
        }
        return return_value;
    }
    
    class TableCoeficientesModel implements TableModel{
        
        Consorcio cons=new Consorcio();    
        protected Object selected;
        private List lst=new ArrayList();
        private Map mp=new HashMap();
               
        TableCoeficientesModel(){

        }
        
        

        public int getRowCount() {
            return this.getLst().size();
        }

        public int getColumnCount() {
            return 2;
        }

        public String getColumnName(int columnIndex) {
            switch (columnIndex){
                case 0: 
                    return "Coeficiente";
                case 1: 
                    return "Importe";
            }
            return "";
        }
        public Class<?> getColumnClass(int columnIndex) {
            return  getValueAt(0, columnIndex).getClass();
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            if(columnIndex==1){
                return true;
            }
            else{
                return false;
            }
        }
       

        public Object getValueAt(int rowIndex, int columnIndex) {
            switch(columnIndex){
                case 0:
                    return ((Coeficiente)this.getLst().get(rowIndex)).getDenominacion();
                case 1:
                    return this.getMp().get(((Coeficiente)this.getLst().get(rowIndex)).getCodigo());                   
            }
            return null;
        }
        

        public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
            
            Double valueFromMap = (Double) this.getMp().get(((Coeficiente)this.getLst().get(rowIndex)).getDenominacion());
            switch (columnIndex) {
                case 0: //Name
                    break;
                case 1: //value
                    Double value=null;
                    if (aValue.toString().trim().length()>0){
                        value = Double.valueOf(aValue.toString());
                    }
                    else{
                        value=0d;
                    }
                    NumberFormat nf = null;
                    nf=NumberFormat.getInstance(Locale.GERMAN);
                    nf.setMaximumFractionDigits(5);
                    String var2= nf.format(value.doubleValue());

                    try {
                        valueFromMap= nf.parse(var2).doubleValue();
                        this.getMp().put(((Coeficiente)this.getLst().get(rowIndex)).getCodigo(),valueFromMap);

                    } catch (ParseException ex) {
                        ex.printStackTrace();
                    }
                    break;
                    
           }
        }
        
        public void addTableModelListener(TableModelListener l) {
        }

        public void removeTableModelListener(TableModelListener l) {
        }

        public List getLst() {
            return lst;
        }

        public void setLst(List lst) {
            this.lst = lst;
        }

        public Map getMp() {
            return mp;
        }

        public void setMp(Map mp) {
            this.mp = mp;
        }
    }

    
}
