/*
 * AsignacionCoeficientes.java
 *
 * Created on 21 de diciembre de 2007, 7:17
 */

package expensav20.GUI;

import Security.Security;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import javax.crypto.NullCipher;
import javax.swing.ComboBoxModel;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.event.ListDataListener;
import javax.swing.event.TableModelListener;
import javax.swing.table.TableModel;
import javax.swing.text.MaskFormatter;
import model.Coeficiente;
import model.CoeficientesAsignados;
import model.Consorcio;
import model.Propiedades;
import model.Unidad;

/**
 *
 * @author  Javier
 */
public class AdministrarNoExpensa extends javax.swing.JFrame implements Security{
    
    /** Creates new form AsignacionCoeficientes */
    public AdministrarNoExpensa() {
        initComponents();
        this.jTbl_Expensas.setModel(new TableExpensasNoModel());
        this.jTbl_Expensas.updateUI();
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Código Generado  ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTbl_Expensas = new javax.swing.JTable();
        jBtn_Salir = new javax.swing.JButton();
        jBtn_Aceptar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Administraci\u00f3n de N\u00fameros de Expensa");
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Propiedades"));
        jTbl_Expensas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Local 1", "25"},
                {"Local 2", "25"},
                {"Local 3", "25"},
                {"Local 4", "25"}
            },
            new String [] {
                "Unidad", "% Asignado"
            }
        ));
        jTbl_Expensas.setEditingColumn(1);
        jScrollPane1.setViewportView(jTbl_Expensas);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jBtn_Salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/expensav20/GUI/Icons/door_out.png")));
        jBtn_Salir.setText("Salir");
        jBtn_Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_SalirActionPerformed(evt);
            }
        });

        jBtn_Aceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/expensav20/GUI/Icons/tick.png")));
        jBtn_Aceptar.setText("Aceptar");
        jBtn_Aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_AceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBtn_Aceptar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtn_Salir)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtn_Salir)
                    .addComponent(jBtn_Aceptar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtn_AceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_AceptarActionPerformed
        Iterator i = ((TableExpensasNoModel)this.jTbl_Expensas.getModel()).getLst().iterator();
        while(i.hasNext()){
            Consorcio cons=(Consorcio)i.next();
            cons.updateMaxExpensa(cons.getUltima_expensa());
            
        }
        JOptionPane.showMessageDialog(this.getContentPane(),"Los valores se guardaron correctamente");
    }//GEN-LAST:event_jBtn_AceptarActionPerformed

    private void jBtn_SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_SalirActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jBtn_SalirActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdministrarNoExpensa().setVisible(true);
            }
        });
    }

    public Map getObjectsAffected() {
        return null;
    }

    public String getUIName() {
        return "AdministrarPropiedades";
    }
    
    // Declaración de varibales -no modificar//GEN-BEGIN:variables
    private javax.swing.JButton jBtn_Aceptar;
    private javax.swing.JButton jBtn_Salir;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTbl_Expensas;
    // Fin de declaración de variables//GEN-END:variables
 
    
    class TableExpensasNoModel implements TableModel{
        
        Consorcio cons=new Consorcio();
        protected Object selected;
        private List lst=new ArrayList();
         
        TableExpensasNoModel(){
           this.setLst(cons.buscarActivos());
        }
        
        public List getLst() {
            return lst;
        }

        public void setLst(List lst) {
            this.lst = lst;
        }

        public int getRowCount() {
            return this.getLst().size();
        }

        public int getColumnCount() {
            return 2;
        }

        public String getColumnName(int columnIndex) {
            switch (columnIndex){
                case 0: 
                    return "Consorcio";
                case 1: 
                    return "Última Expensa";
            }
            return "";
        }
        public Class<?> getColumnClass(int columnIndex) {
            return  getValueAt(0, columnIndex).getClass();
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            if(columnIndex==1){
                return true;
            }
            else{
                return false;
            }
        }
       

        public Object getValueAt(int rowIndex, int columnIndex) {
            switch(columnIndex){
                case 0:
                    return ((Consorcio)this.getLst().get(rowIndex)).getDenominacion();
                case 1:
                    return ((Consorcio)this.getLst().get(rowIndex)).getUltima_expensa();                    
            }
            return null;
        }
        

        public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
            
            Consorcio cons = (Consorcio)this.getLst().get(rowIndex);
            switch (columnIndex) {
                case 0: //Name
                    cons.setDenominacion((String)aValue);
                    break;
            case 1: //value
                    cons.setUltima_expensa((Long)aValue);
                    break;
           }
        }

        public void addTableModelListener(TableModelListener l) {
        }

        public void removeTableModelListener(TableModelListener l) {
        }

    }

}
