/*
 * ConsultaUnidad.java
 *
 * Created on 26 de diciembre de 2007, 11:37
 */

package expensav20.GUI;

import Security.Security;
import informes.InformeListadoUnidades;
import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.ComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.event.ListDataListener;
import javax.swing.event.TableModelListener;
import javax.swing.table.TableModel;
import model.Consorcio;
import model.Unidad;

/**
 *
 * @author  Javier
 */
public class ConsultaUnidad extends javax.swing.JFrame implements Security{
    
    /** Creates new form ConsultaUnidad */
    public ConsultaUnidad() {
        initComponents();
        Consorcio cons=new Consorcio();
        this.jCmb_Consorcio.setModel(new ComboConsorciosModel());
        this.jCmb_Consorcio.setEditable(true);
        this.jCmb_Consorcio.updateUI();
        /*this.jTlb_Resultados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Consorcio", "Unidad","Propietario","Inquilino","Fecha Baja"
            }
        ));*/
        this.jTlb_Resultados.setModel(new TableResultadosModel());
        this.sizeTable();
        this.jTlb_Resultados.updateUI();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Código Generado  ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTxt_Unidad = new javax.swing.JTextField();
        jBtn_Consultar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jCmb_Consorcio = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jChk_Consorcio = new javax.swing.JCheckBox();
        jChk_Unidad = new javax.swing.JCheckBox();
        jChk_Propietario = new javax.swing.JCheckBox();
        jChk_Inquilino = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jTxt_Propietario = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTxt_Inquilino = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTlb_Resultados = new javax.swing.JTable();
        jBtn_Salir = new javax.swing.JButton();
        jBtn_Listar = new javax.swing.JButton();
        jBtn_Activar = new javax.swing.JButton();
        jBtn_Modificar = new javax.swing.JButton();
        jBtn_Eliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consulta de Unidades");
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Unidades"));
        jLabel1.setText("Unidad:");

        jTxt_Unidad.setEnabled(false);

        jBtn_Consultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/expensav20/GUI/Icons/zoom.png")));
        jBtn_Consultar.setText("Consultar");
        jBtn_Consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_ConsultarActionPerformed(evt);
            }
        });

        jLabel2.setText("Consorcio:");

        jCmb_Consorcio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Art\u00edculo 1", "Art\u00edculo 2", "Art\u00edculo 3", "Art\u00edculo 4" }));
        jCmb_Consorcio.setEnabled(false);
        jCmb_Consorcio.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                jCmb_ConsorcioPopupMenuWillBecomeVisible(evt);
            }
        });
        jCmb_Consorcio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCmb_ConsorcioActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Consultar por:"));
        jChk_Consorcio.setText("Consorcio");
        jChk_Consorcio.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jChk_Consorcio.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jChk_Consorcio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jChk_ConsorcioActionPerformed(evt);
            }
        });

        jChk_Unidad.setText("Unidad");
        jChk_Unidad.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jChk_Unidad.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jChk_Unidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jChk_UnidadActionPerformed(evt);
            }
        });

        jChk_Propietario.setText("Propietario");
        jChk_Propietario.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jChk_Propietario.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jChk_Propietario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jChk_PropietarioActionPerformed(evt);
            }
        });

        jChk_Inquilino.setText("Inquilino");
        jChk_Inquilino.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jChk_Inquilino.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jChk_Inquilino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jChk_InquilinoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jChk_Unidad)
                    .addComponent(jChk_Consorcio)
                    .addComponent(jChk_Propietario)
                    .addComponent(jChk_Inquilino))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jChk_Consorcio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jChk_Unidad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jChk_Propietario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jChk_Inquilino)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setText("Propietario:");

        jTxt_Propietario.setEnabled(false);

        jLabel4.setText("Inquilino:");

        jTxt_Inquilino.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCmb_Consorcio, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTxt_Unidad)
                    .addComponent(jTxt_Propietario)
                    .addComponent(jTxt_Inquilino, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtn_Consultar)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jCmb_Consorcio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTxt_Unidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTxt_Propietario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTxt_Inquilino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtn_Consultar)))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Resultado"));
        jTlb_Resultados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Título 1", "Título 2", "Título 3", "Título 4"
            }
        ));
        jScrollPane1.setViewportView(jTlb_Resultados);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jBtn_Salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/expensav20/GUI/Icons/door_out.png")));
        jBtn_Salir.setText("Salir");
        jBtn_Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_SalirActionPerformed(evt);
            }
        });

        jBtn_Listar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/expensav20/GUI/Icons/report_add.png")));
        jBtn_Listar.setText("Listar");
        jBtn_Listar.setName("jBtn_Listar");
        jBtn_Listar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_ListarActionPerformed(evt);
            }
        });

        jBtn_Activar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/expensav20/GUI/Icons/page_white_go.png")));
        jBtn_Activar.setText("Activar");
        jBtn_Activar.setName("jBtn_Activar");
        jBtn_Activar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_ActivarActionPerformed(evt);
            }
        });

        jBtn_Modificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/expensav20/GUI/Icons/page_white_edit.png")));
        jBtn_Modificar.setText("Modificar");
        jBtn_Modificar.setName("jBtn_Modificar");
        jBtn_Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_ModificarActionPerformed(evt);
            }
        });

        jBtn_Eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/expensav20/GUI/Icons/page_white_delete.png")));
        jBtn_Eliminar.setText("Eliminar");
        jBtn_Eliminar.setName("jBtn_Eliminar");
        jBtn_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_EliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(159, Short.MAX_VALUE)
                .addComponent(jBtn_Listar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtn_Activar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtn_Modificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtn_Eliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtn_Salir)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtn_Salir)
                    .addComponent(jBtn_Eliminar)
                    .addComponent(jBtn_Modificar)
                    .addComponent(jBtn_Activar)
                    .addComponent(jBtn_Listar))
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtn_ActivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_ActivarActionPerformed
        if (this.jTlb_Resultados.getRowCount()==0){
           JOptionPane.showMessageDialog(this.getContentPane(),"Debe seleccionar una unidad previamente");
           return;
       }
        if (this.jTlb_Resultados.getSelectedRow()==-1){
           JOptionPane.showMessageDialog(this.getContentPane(),"Debe seleccionar una unidad previamente");
           return;
       }
       Unidad uni = (Unidad)((TableResultadosModel)this.jTlb_Resultados.getModel()).getLst().get(this.jTlb_Resultados.getSelectedRow());
       if(uni.getFechabaja()==null){
           JOptionPane.showMessageDialog(this.getContentPane(),"La unidad ya se encuentra activa.");
           return;
       }
       if(uni.activar()!=0){
           JOptionPane.showMessageDialog(this.getContentPane(),"La unidad fue dada de activada correctamente.");
       }
       else{
           JOptionPane.showMessageDialog(this.getContentPane(),"Ocurrió un error al activar la unidad, por favor intente nuevamente");
       }
       this.actualizar();
    }//GEN-LAST:event_jBtn_ActivarActionPerformed

    private void jBtn_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_EliminarActionPerformed
       if (this.jTlb_Resultados.getRowCount()==0){
           JOptionPane.showMessageDialog(this.getContentPane(),"Debe seleccionar una unidad previamente");
           return;
       }

       if (this.jTlb_Resultados.getSelectedRow()==-1){
           JOptionPane.showMessageDialog(this.getContentPane(),"Debe seleccionar una unidad previamente");
              return;
       }
       Unidad uni = (Unidad)((TableResultadosModel)this.jTlb_Resultados.getModel()).getLst().get(this.jTlb_Resultados.getSelectedRow());
       if(uni.getFechabaja()!=null){
           JOptionPane.showMessageDialog(this.getContentPane(),"La unidad ya fue dada de baja");
           return;
       }
       if(uni.eliminar()!=0){
           JOptionPane.showMessageDialog(this.getContentPane(),"La unidad fue dada de baja correctamente.");
       }
       else{
           JOptionPane.showMessageDialog(this.getContentPane(),"Ocurrió un error al dar de baja la unidad, por favor intente nuevamente");
       }
       this.actualizar();
       
    }//GEN-LAST:event_jBtn_EliminarActionPerformed

    private void jBtn_ListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_ListarActionPerformed
        InformeListadoUnidades ilc=new InformeListadoUnidades();
        Consorcio cons=new Consorcio();
        String unidad=new String();
        String propietario = new String();
        String inquilino=new String();
        String consorcio_id = new String();
        if (this.jChk_Consorcio.isSelected()){
            cons=(Consorcio)((ComboConsorciosModel)this.jCmb_Consorcio.getModel()).getLst().get(this.jCmb_Consorcio.getSelectedIndex());
            consorcio_id=String.valueOf(cons.getCodigo());
        }
        else{
            consorcio_id=String.valueOf(0);
        }
        if (this.jChk_Unidad.isSelected()){
            unidad=this.jTxt_Unidad.getText();
        }
        if(this.jChk_Propietario.isSelected()){
            propietario=this.jTxt_Propietario.getText();
        }
        if(this.jChk_Inquilino.isSelected()){
            inquilino=this.jTxt_Inquilino.getText();
        }
        Map param=new HashMap();
        param.put("PROPIETARIO","%"+propietario+"%");
        param.put("INQUILINO","%"+inquilino+"%");
        param.put("UNIDAD","%"+unidad+"%");
        param.put("CONSORCIO_ID",consorcio_id);
        ilc.setParameters(param);
        ilc.displayReport();
    }//GEN-LAST:event_jBtn_ListarActionPerformed

    private void jBtn_ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_ModificarActionPerformed
        if (this.jTlb_Resultados.getSelectedRow()==-1){
           JOptionPane.showMessageDialog(this.getContentPane(),"Debe seleccionar una unidad previamente");
           return;
        }
        
        Unidad uni = (Unidad)((TableResultadosModel)this.jTlb_Resultados.getModel()).getLst().get(this.jTlb_Resultados.getSelectedRow());
        if (uni==null){
            JOptionPane.showMessageDialog(this.getContentPane(),"Debe seleccionar una unidad previamente");
            return;
        }
        AltaUnidades au=new AltaUnidades(uni,this);
        au.setVisible(true);
    }//GEN-LAST:event_jBtn_ModificarActionPerformed

    private void jBtn_ConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_ConsultarActionPerformed

        if (this.jChk_Consorcio.isSelected()){
            if (this.jCmb_Consorcio.getSelectedIndex()==-1){
                JOptionPane.showMessageDialog(this.getContentPane(),"Debe seleccionar un consorcio previamente");
                this.jCmb_Consorcio.requestFocus();
                return;
            }
        }
        if(this.jChk_Unidad.isSelected()){
            if(this.jTxt_Unidad.getText().trim().length()==0){
                JOptionPane.showMessageDialog(this.getContentPane(),"Debe ingresar la descripción de una unidad");
                this.jTxt_Unidad.requestFocus();
                return;
            }
        }
        if(this.jChk_Propietario.isSelected()){
            if(this.jTxt_Propietario.getText().trim().length()==0){
                JOptionPane.showMessageDialog(this.getContentPane(),"Debe ingresar el nombre de un propietario");
                this.jTxt_Propietario.requestFocus();
                return;
            }
        }
        if(this.jChk_Inquilino.isSelected()){
            if(this.jTxt_Inquilino.getText().trim().length()==0){
                JOptionPane.showMessageDialog(this.getContentPane(),"Debe ingresar el nombre de un inquilino");
                this.jTxt_Inquilino.requestFocus();
                return;
            }
        }
            
        Unidad uni = new Unidad();
        Consorcio cons=new Consorcio();
        String unidad=new String();
        String propietario = new String();
        String inquilino=new String();
        if (this.jChk_Consorcio.isSelected()){
            cons=(Consorcio)((ComboConsorciosModel)this.jCmb_Consorcio.getModel()).getLst().get(this.jCmb_Consorcio.getSelectedIndex());
        }
        else{
            cons=null;
        }
        if (this.jChk_Unidad.isSelected()){
            unidad=this.jTxt_Unidad.getText();
        }
        if(this.jChk_Propietario.isSelected()){
            propietario=this.jTxt_Propietario.getText();
        }
        if(this.jChk_Inquilino.isSelected()){
            inquilino=this.jTxt_Inquilino.getText();
        }
        ((TableResultadosModel)this.jTlb_Resultados.getModel()).setLst(uni.buscarxCriteria(cons,unidad,propietario,inquilino));
        this.jTlb_Resultados.updateUI();
        
    }//GEN-LAST:event_jBtn_ConsultarActionPerformed

    private void jCmb_ConsorcioPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jCmb_ConsorcioPopupMenuWillBecomeVisible
        this.searchCombo(this.jCmb_Consorcio);
    }//GEN-LAST:event_jCmb_ConsorcioPopupMenuWillBecomeVisible

    private void jCmb_ConsorcioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmb_ConsorcioActionPerformed
        ((JTextField)this.jCmb_Consorcio.getEditor().getEditorComponent()).setText(((String)this.jCmb_Consorcio.getSelectedItem()));        
    }//GEN-LAST:event_jCmb_ConsorcioActionPerformed

    private void jChk_InquilinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jChk_InquilinoActionPerformed
        if(this.jChk_Inquilino.isSelected()){
            this.jTxt_Inquilino.setEnabled(true);
            this.jTxt_Inquilino.requestFocus();
        }
        else{
            this.jTxt_Inquilino.setEnabled(false);
            this.jTxt_Inquilino.setText("");
        }
    }//GEN-LAST:event_jChk_InquilinoActionPerformed

    private void jChk_PropietarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jChk_PropietarioActionPerformed
        if(this.jChk_Propietario.isSelected()){
            this.jTxt_Propietario.setEnabled(true);
            this.jTxt_Propietario.requestFocus();
        }
        else{
            this.jTxt_Propietario.setEnabled(false);
            this.jTxt_Propietario.setText("");
        }
    }//GEN-LAST:event_jChk_PropietarioActionPerformed

    private void jChk_UnidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jChk_UnidadActionPerformed
        if(this.jChk_Unidad.isSelected()){
            this.jTxt_Unidad.setEnabled(true);
            this.jTxt_Unidad.requestFocus();
        }
        else{
            this.jTxt_Unidad.setEnabled(false);
            this.jTxt_Unidad.setText("");
        }
    }//GEN-LAST:event_jChk_UnidadActionPerformed

    private void jChk_ConsorcioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jChk_ConsorcioActionPerformed
        if (this.jChk_Consorcio.isSelected()){
            this.jCmb_Consorcio.setEnabled(true);
            this.jCmb_Consorcio.requestFocus();
        }
        else{
            this.jCmb_Consorcio.setSelectedIndex(-1);
            this.jCmb_Consorcio.setEnabled(false);
        }
    }//GEN-LAST:event_jChk_ConsorcioActionPerformed

    private void jBtn_SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_SalirActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jBtn_SalirActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultaUnidad().setVisible(true);
            }
        });
    }
    
    // Declaración de varibales -no modificar//GEN-BEGIN:variables
    private javax.swing.JButton jBtn_Activar;
    private javax.swing.JButton jBtn_Consultar;
    private javax.swing.JButton jBtn_Eliminar;
    private javax.swing.JButton jBtn_Listar;
    private javax.swing.JButton jBtn_Modificar;
    private javax.swing.JButton jBtn_Salir;
    private javax.swing.JCheckBox jChk_Consorcio;
    private javax.swing.JCheckBox jChk_Inquilino;
    private javax.swing.JCheckBox jChk_Propietario;
    private javax.swing.JCheckBox jChk_Unidad;
    private javax.swing.JComboBox jCmb_Consorcio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTlb_Resultados;
    private javax.swing.JTextField jTxt_Inquilino;
    private javax.swing.JTextField jTxt_Propietario;
    private javax.swing.JTextField jTxt_Unidad;
    // Fin de declaración de variables//GEN-END:variables

    public void searchCombo(JComboBox jc){
        
        String st=((JTextField)jc.getEditor().getEditorComponent()).getText();
        for(int i=0;i<jc.getModel().getSize();i++)
        {
            if(((String)jc.getItemAt(i)).contains(st)){
               jc.setSelectedIndex(i); 
               ((JTextField)jc.getEditor().getEditorComponent()).setText((String)jc.getSelectedItem());
              }
                
        }
    }
    
    
    class ComboConsorciosModel implements ComboBoxModel{
        
        Consorcio cons=new Consorcio();
        protected Object selected;
        private List lst;
         
        ComboConsorciosModel(){
            this.setLst(cons.buscarActivos());
        }
        public void setSelectedItem(Object item) {
               this.selected=item;
        }
	public Object getSelectedItem() {
		return this.selected;
	}

	public String getElementAt(int index) {
                Consorcio consor=new Consorcio();
                consor=(Consorcio)getLst().get(index);
		return consor.getDenominacion();
	}
        
	public int getSize() {
		return getLst().size();
	}        

        public void addListDataListener(ListDataListener l) {
        }

        public void removeListDataListener(ListDataListener l) {
        }

        public List getLst() {
            return lst;
        }

        public void setLst(List lst) {
            this.lst = lst;
        }
    }
    
    class TableResultadosModel implements TableModel{
        
        Consorcio cons= new Consorcio();
        protected Object selected;
        private List lst=new ArrayList();
         
        TableResultadosModel(){
           
        }
        
        public List getLst() {
            return lst;
        }

        public void setLst(List lst) {
            this.lst = lst;
        }

        public int getRowCount() {
            return this.getLst().size();
        }

        public int getColumnCount() {
            return 5;
        }

        public String getColumnName(int columnIndex) {
            switch (columnIndex){
                case 0: 
                    return "Consorcio";
                case 1: 
                    return "Unidad";
                case 2: 
                    return "Propietario";
                case 3: 
                    return "Inquilino";
                case 4: 
                    return "Fecha Baja";
            }
            return "";
        }
        public Class<?> getColumnClass(int columnIndex) {
            return this.getClass();
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return false;
        }
       

        public Object getValueAt(int rowIndex, int columnIndex) {
            SimpleDateFormat sdf=new SimpleDateFormat("dd/MM/yyyy");
            switch(columnIndex){
                case 0:
                    return ((Unidad)this.getLst().get(rowIndex)).getConsorcio().getDenominacion();
                case 1:
                    return ((Unidad)this.getLst().get(rowIndex)).getDescripcion();
                case 2:
                    return ((Unidad)this.getLst().get(rowIndex)).getPropietario().getNombre();
                case 3:
                    if (((Unidad)this.getLst().get(rowIndex)).getInquilino()!=null){
                        return ((Unidad)this.getLst().get(rowIndex)).getInquilino().getNombre();                    
                    }
                    else{
                        return "";
                    }
                case 4:
                    if (((Unidad)this.getLst().get(rowIndex)).getFechabaja()!=null){
                        return sdf.format(((Unidad)this.getLst().get(rowIndex)).getFechabaja());                    
                    }
                    else{
                        return "";
                    }
            }
            
            return null;
        }
        

        public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
        }

        public void addTableModelListener(TableModelListener l) {
        }

        public void removeTableModelListener(TableModelListener l) {
        }
    }
    
    public void actualizar(){
        Unidad uni = new Unidad();
        Consorcio cons=new Consorcio();
        String unidad=new String();
        String propietario = new String();
        String inquilino=new String();
        if (this.jChk_Consorcio.isSelected()){
            cons=(Consorcio)((ComboConsorciosModel)this.jCmb_Consorcio.getModel()).getLst().get(this.jCmb_Consorcio.getSelectedIndex());
        }
        else{
            cons=null;
        }
        if (this.jChk_Unidad.isSelected()){
            unidad=this.jTxt_Unidad.getText();
        }
        if(this.jChk_Propietario.isSelected()){
            propietario=this.jTxt_Propietario.getText();
        }
        if(this.jChk_Inquilino.isSelected()){
            inquilino=this.jTxt_Inquilino.getText();
        }
        ((TableResultadosModel)this.jTlb_Resultados.getModel()).setLst(uni.buscarxCriteria(cons,unidad,propietario,inquilino));
        this.jTlb_Resultados.updateUI();
   }
      public Map getObjectsAffected() {
        Map a=new HashMap();
        a.put(this.jBtn_Activar.getName(),this.jBtn_Activar);
        a.put(this.jBtn_Eliminar.getName(),this.jBtn_Eliminar);
        a.put(this.jBtn_Listar.getName(),this.jBtn_Listar);
        a.put(this.jBtn_Modificar.getName(),this.jBtn_Modificar);
        return a;
    }

    public String getUIName() {
        return "ConsultaUnidad";
    }
    public void sizeTable()
    {
        this.jTlb_Resultados.getColumnModel().getColumn(0).setPreferredWidth(171);
        this.jTlb_Resultados.getColumnModel().getColumn(1).setPreferredWidth(98);
        this.jTlb_Resultados.getColumnModel().getColumn(2).setPreferredWidth(140);
        this.jTlb_Resultados.getColumnModel().getColumn(3).setPreferredWidth(106);
        this.jTlb_Resultados.getColumnModel().getColumn(4).setPreferredWidth(45);
    }
}
